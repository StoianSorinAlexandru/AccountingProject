@page "/exits"
@using ProiectConta.Exits
@using ProiectConta.Gestions
@using ProiectConta.Partners
@using ProiectConta.Products
@using ProiectConta.DetailedExits
@using ProiectConta.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inherits ProiectContaComponentBase
@inject IExitAppService ExitAppService
@inject IGestionAppService GestionAppService
@inject IPartnerAppService PartnerAppService
@inject IProductAppService ProductAppService
@inject IDetailedExitAppService DetailedExitAppService
@inject AbpBlazorMessageLocalizerHelper<ProiectContaResource> LH

<Card>
	<CardHeader>
		<Row Class="justify-content-between">
			<Column ColumnSize="ColumnSize.IsAuto">
				<h2>@L["Exits"]</h2>
			</Column>
			<Column ColumnSize="ColumnSize.IsAuto">
				<Button Color="Color.Primary" Clicked="OpenCreateExitModal">
					@L["AddExit"]
				</Button>
			</Column>
		</Row>
	</CardHeader>
	<CardBody>
		<DataGrid TItem="ExitDto"
				  Data="ExitList"
				  TotalItems="TotalCount"
				  ShowPager="true"
				  PageSize="PageSize">
			<DataGridColumns>
				<DataGridColumn
					TItem="ExitDto"
					Caption="@L["Actions"]"
					Field="@nameof(ExitDto.Id)">
					<DisplayTemplate>
						<Dropdown>
							<DropdownToggle Color="Color.Primary">
								@L["Actions"]
							</DropdownToggle>
							<DropdownMenu>
								<DropdownItem Clicked="() => OpenEditExitModal(context)">
									@L["Edit"]
								</DropdownItem>
								<DropdownItem Clicked="() => DeleteExitAsync(context)">
									@L["Delete"]
								</DropdownItem>
								<DropdownItem Clicked="() => OpenViewDetailsModal(context)">
									@L["Select"]
								</DropdownItem>
							</DropdownMenu>
						</Dropdown>
					</DisplayTemplate>
					
				</DataGridColumn>
				<DataGridColumn TItem="ExitDto" Field="@nameof(ExitDto.Date)" Caption="@L["Date"]" />
				<DataGridColumn TItem="ExitDto" Field="@nameof(ExitDto.PartnerName)" Caption="@L["Partner"]" />
				<DataGridColumn TItem="ExitDto" Field="@nameof(ExitDto.GestionName)" Caption="@L["Gestion"]" />

			</DataGridColumns>
		</DataGrid>
	</CardBody>
</Card>

<Modal Animated="true" @ref="CreateExitModal">
	<ModalContent IsCentered="true">
		<Form>
			<ModalHeader>
				<ModalTitle>@L["AddExit"]</ModalTitle>
				<CloseButton OnClick="CloseCreateExitModal" />
			</ModalHeader>
			<ModalBody>
				<div>
					<Label>Partner:</Label>
					<Select @bind-Value="NewExit.PartnerName" TValue="string">
						@foreach (var partner in PartnerList)
						{
							<SelectItem Value="@partner" TValue="string">
								@partner
							</SelectItem>
						}
					</Select>
				</div>
				<div>
					<Label>Gestion:</Label>
					<Select @bind-Value="NewExit.GestionName" TValue="string">
						@foreach (var gestion in GestionList)
						{
							<SelectItem Value="@gestion" TValue="string">
								@gestion
							</SelectItem>
						}
					</Select>
					</div>
				<div>
					<Label>Product:</Label>
					<Select @bind-Value="NewDetailedExit.ProductName" TValue="string">
						@foreach (var product in ProductList)
						{
							<SelectItem Value="@product" TValue="string">
								@product
							</SelectItem>
						}
					</Select>
				</div>
				<Field>
					<FieldLabel>@L["Date"]</FieldLabel>
					<DateEdit @bind-Value="NewExit.Date" TValue="DateTime"/>
				</Field>
			</ModalBody>
			<ModalFooter>
				<Button Color="Color.Primary" Type="@ButtonType.Submit" OnClick="CreateExitAsync">@L["Save"]</Button>
				<Button Color="Color.Secondary" Type="@ButtonType.Submit" OnClick="CloseCreateExitModal">@L["Cancel"]</Button>
			</ModalFooter>
		</Form>
	</ModalContent>
</Modal>

<Modal Animated="true" @ref="EditExitModal">
		<ModalContent IsCentered="true">
			<Form>
				<ModalHeader>
					<ModalTitle>@L["EditExit"]</ModalTitle>
					<CloseButton OnClick="CloseEditExitModal" />
				</ModalHeader>
				<ModalBody>

				<div>
					<Label>Partner:</Label>
					<Select @bind-Value="EditingExit.PartnerName" TValue="string">
						@foreach (var partner in PartnerList)
						{
							<SelectItem Value="@partner" TValue="string">
								@partner
							</SelectItem>
						}
					</Select>
				</div>
				<div>
					<Label>Gestion:</Label>
					<Select @bind-Value="EditingExit.GestionName" TValue="string">
						@foreach (var gestion in GestionList)
						{
							<SelectItem Value="@gestion" TValue="string">
								@gestion
							</SelectItem>
						}
					</Select>
				</div>
				<div>
					<Label>Product:</Label>
					<Select @bind-Value="EditingDetailedExit.ProductName" TValue="string">
						@foreach (var product in ProductList)
						{
							<SelectItem Value="@product" TValue="string">
								@product
							</SelectItem>
						}
					</Select>
				</div>
				<Field>
					<FieldLabel>@L["Date"]</FieldLabel>
					<DateEdit @bind-Value="EditingExit.Date" TValue="DateTime" />
				</Field>

				</ModalBody>
				<ModalFooter>
					<Button Color="Color.Primary" Type="@ButtonType.Submit" OnClick="UpdateExitAsync">@L["Save"]</Button>
					<Button Color="Color.Secondary" Type="@ButtonType.Submit" OnClick="CloseEditExitModal">@L["Cancel"]</Button>
				</ModalFooter>
			</Form>
		</ModalContent>
</Modal>

<Modal @ref="ViewDetailsModal">
	<ModalContent>
		<Form>
			<ModalHeader>
				<ModalTitle>@L["Details"]</ModalTitle>
				<CloseButton Clicked="CloseViewDetailsModal" />
			</ModalHeader>
			<ModalBody>

			</ModalBody>
			<ModalFooter>
				<Button Color="Color.Secondary" Clicked="CloseViewDetailsModal">@L["Close"]</Button>
			</ModalFooter>
		</Form>
	</ModalContent>
</Modal>